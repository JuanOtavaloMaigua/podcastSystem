{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/JuanOtavalo/Desktop/platziCursos/nextjsCurso/retoCurso/podcast/pages/listen.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { Component } from 'react';\nimport Navigation from '../Components/navigation';\nimport Audio from '../Components/audio';\n\nconst Listen = props => {\n  // try {\n  //     <div>\n  //         <img src={props.image} alt=\"podcast_image\"></img>\n  //         <Audio src={props.mp3}/>\n  //     </div>\n  // } catch (error) {\n  //     <h4>{props.error}</h4>\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jsx-4102354107\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      podcast_title: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), \"try \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-4102354107\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.image,\n        alt: \"podcast_image\",\n        className: \"jsx-4102354107\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Audio, {\n        src: props.mp3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), \" catch (error) \", /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"jsx-4102354107\",\n      children: props.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"4102354107\",\n      children: \"body{background:#23475C;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9KdWFuT3RhdmFsby9EZXNrdG9wL3BsYXR6aUN1cnNvcy9uZXh0anNDdXJzby9yZXRvQ3Vyc28vcG9kY2FzdC9wYWdlcy9saXN0ZW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkJpQixBQUc0QyxtQkFDdkIiLCJmaWxlIjoiL1VzZXJzL0p1YW5PdGF2YWxvL0Rlc2t0b3AvcGxhdHppQ3Vyc29zL25leHRqc0N1cnNvL3JldG9DdXJzby9wb2RjYXN0L3BhZ2VzL2xpc3Rlbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgTmF2aWdhdGlvbiBmcm9tICcuLi9Db21wb25lbnRzL25hdmlnYXRpb24nXG5pbXBvcnQgQXVkaW8gZnJvbSAnLi4vQ29tcG9uZW50cy9hdWRpbydcblxuXG5jb25zdCBMaXN0ZW4gPSAocHJvcHMpPT57XG4gICAgLy8gdHJ5IHtcbiAgICAvLyAgICAgPGRpdj5cbiAgICAvLyAgICAgICAgIDxpbWcgc3JjPXtwcm9wcy5pbWFnZX0gYWx0PVwicG9kY2FzdF9pbWFnZVwiPjwvaW1nPlxuICAgIC8vICAgICAgICAgPEF1ZGlvIHNyYz17cHJvcHMubXAzfS8+XG4gICAgLy8gICAgIDwvZGl2PlxuICAgICAgICBcbiAgICAvLyB9IGNhdGNoIChlcnJvcikge1xuICAgIC8vICAgICA8aDQ+e3Byb3BzLmVycm9yfTwvaDQ+XG4gICAgLy8gfVxuICAgIHJldHVybiA8ZGl2PlxuICAgICAgICA8TmF2aWdhdGlvbiBwb2RjYXN0X3RpdGxlPXtwcm9wcy5uYW1lfS8+XG4gICAgICAgIFxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8aW1nIHNyYz17cHJvcHMuaW1hZ2V9IGFsdD1cInBvZGNhc3RfaW1hZ2VcIj48L2ltZz5cbiAgICAgICAgICAgICAgICA8QXVkaW8gc3JjPXtwcm9wcy5tcDN9Lz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICA8aDQ+e3Byb3BzLmVycm9yfTwvaDQ+XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPlxuICAgICAgICAgICAgICAgIHtgXG4gICAgICAgICAgICAgICAgICAgIGJvZHl7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMjM0NzVDO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYH1cbiAgICAgICAgPC9zdHlsZT5cbiAgICA8L2Rpdj5cbn1cblxuTGlzdGVuLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jICh7cXVlcnl9KT0+e1xuICAgIGxldCBpZF9wb2RjYXN0ID0gcXVlcnkuaWRcbiAgICBsZXQgcG9kY2FzdF9uYW1lID0gcXVlcnkubmFtZVxuICAgIHRyeXtcbiAgICAgICAgbGV0IHJlcXVlc3QgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9hdWRpb19jbGlwcy8ke2lkUG9kY2FzdH0ubXAzYClcbiAgICAgICAgdmFyIGRhdGEgPSBhd2FpdCByZXF1ZXN0Lmpzb24oKVxuICAgICAgICBsZXQgZGF0YV9yZXRyaWV2ZSA9IGRhdGEuYm9keS5hdWRpb19jbGlwc1xuICAgICAgICBsZXQgbXAzX2RhdGEgPSBkYXRhX3JldHJpZXZlLnVybHMuaGlnaF9tM1xuICAgICAgICBsZXQgaW1hZ2VfZXBpc29kZSA9IGRhdGFfcmV0cmlldmUudXJscy5wb3N0X2ltYWdlLm9yaWdpbmFsXG5cbiAgICAgICAgcmV0dXJuIHttcDM6IG1wM19kYXRhLCBpbWFnZTogaW1hZ2VfZXBpc29kZSwgbmFtZTogcG9kY2FzdF9uYW1lfVxuICAgIH1cbiAgICBjYXRjaChlcnIpe1xuICAgICAgICByZXR1cm4ge2Vycm9yOiBcIk5vIGV4aXN0ZW4gZXBpc29kaW9zXCIsIG5hbWU6IHBvZGNhc3RfbmFtZX1cbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgTGlzdGVuOyJdfQ== */\\n/*@ sourceURL=/Users/JuanOtavalo/Desktop/platziCursos/nextjsCurso/retoCurso/podcast/pages/listen.js */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n\nListen.getInitialProps = async ({\n  query\n}) => {\n  let id_podcast = query.id;\n  let podcast_name = query.name;\n\n  try {\n    let request = await fetch(`https://api.audioboom.com/audio_clips/${idPodcast}.mp3`);\n    var data = await request.json();\n    let data_retrieve = data.body.audio_clips;\n    let mp3_data = data_retrieve.urls.high_m3;\n    let image_episode = data_retrieve.urls.post_image.original;\n    return {\n      mp3: mp3_data,\n      image: image_episode,\n      name: podcast_name\n    };\n  } catch (err) {\n    return {\n      error: \"No existen episodios\",\n      name: podcast_name\n    };\n  }\n};\n\nexport default Listen;","map":{"version":3,"sources":["/Users/JuanOtavalo/Desktop/platziCursos/nextjsCurso/retoCurso/podcast/pages/listen.js"],"names":["React","Component","Navigation","Audio","Listen","props","name","image","mp3","error","getInitialProps","query","id_podcast","id","podcast_name","request","fetch","idPodcast","data","json","data_retrieve","body","audio_clips","mp3_data","urls","high_m3","image_episode","post_image","original","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAS;AACpB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,sBAAO;AAAA;AAAA,4BACH,QAAC,UAAD;AAAY,MAAA,aAAa,EAAEA,KAAK,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA,YADG,uBAIC;AAAA;AAAA,8BACI;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,KAAhB;AAAuB,QAAA,GAAG,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAEF,KAAK,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,kCAUC;AAAA;AAAA,gBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAqBH,CA/BD;;AAiCAL,MAAM,CAACM,eAAP,GAAyB,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAiB;AACtC,MAAIC,UAAU,GAAGD,KAAK,CAACE,EAAvB;AACA,MAAIC,YAAY,GAAGH,KAAK,CAACL,IAAzB;;AACA,MAAG;AACC,QAAIS,OAAO,GAAG,MAAMC,KAAK,CAAE,yCAAwCC,SAAU,MAApD,CAAzB;AACA,QAAIC,IAAI,GAAG,MAAMH,OAAO,CAACI,IAAR,EAAjB;AACA,QAAIC,aAAa,GAAGF,IAAI,CAACG,IAAL,CAAUC,WAA9B;AACA,QAAIC,QAAQ,GAAGH,aAAa,CAACI,IAAd,CAAmBC,OAAlC;AACA,QAAIC,aAAa,GAAGN,aAAa,CAACI,IAAd,CAAmBG,UAAnB,CAA8BC,QAAlD;AAEA,WAAO;AAACpB,MAAAA,GAAG,EAAEe,QAAN;AAAgBhB,MAAAA,KAAK,EAAEmB,aAAvB;AAAsCpB,MAAAA,IAAI,EAAEQ;AAA5C,KAAP;AACH,GARD,CASA,OAAMe,GAAN,EAAU;AACN,WAAO;AAACpB,MAAAA,KAAK,EAAE,sBAAR;AAAgCH,MAAAA,IAAI,EAAEQ;AAAtC,KAAP;AACH;AAEJ,CAhBD;;AAkBA,eAAeV,MAAf","sourcesContent":["import React, {Component} from 'react'\nimport Navigation from '../Components/navigation'\nimport Audio from '../Components/audio'\n\n\nconst Listen = (props)=>{\n    // try {\n    //     <div>\n    //         <img src={props.image} alt=\"podcast_image\"></img>\n    //         <Audio src={props.mp3}/>\n    //     </div>\n        \n    // } catch (error) {\n    //     <h4>{props.error}</h4>\n    // }\n    return <div>\n        <Navigation podcast_title={props.name}/>\n        \n        try {\n            <div>\n                <img src={props.image} alt=\"podcast_image\"></img>\n                <Audio src={props.mp3}/>\n            </div>\n            \n        } catch (error) {\n            <h4>{props.error}</h4>\n        }\n        \n        <style jsx global>\n                {`\n                    body{\n                        background: #23475C;\n                    }\n                `}\n        </style>\n    </div>\n}\n\nListen.getInitialProps = async ({query})=>{\n    let id_podcast = query.id\n    let podcast_name = query.name\n    try{\n        let request = await fetch(`https://api.audioboom.com/audio_clips/${idPodcast}.mp3`)\n        var data = await request.json()\n        let data_retrieve = data.body.audio_clips\n        let mp3_data = data_retrieve.urls.high_m3\n        let image_episode = data_retrieve.urls.post_image.original\n\n        return {mp3: mp3_data, image: image_episode, name: podcast_name}\n    }\n    catch(err){\n        return {error: \"No existen episodios\", name: podcast_name}\n    }\n\n}\n\nexport default Listen;"]},"metadata":{},"sourceType":"module"}